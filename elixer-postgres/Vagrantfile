#!/usr/bin/env ruby
# -*- mode: ruby -*-
# vi: set ft=ruby :
#^syntax detection

Vagrant.configure("2") do |config|
  config.vm.box = "mullen/vagrant-trusty64"
  config.vm.hostname = "APPNAME"

  config.vm.provider :virtualbox do | vm |
    vm.customize ["modifyvm", :id, "--memory", 1536]
    vm.customize ["modifyvm", :id, "--cpus", "2"]
    vm.customize ["modifyvm", :id, "--ioapic", "on"]
    vm.customize ["modifyvm", :id, "--nictype1", "virtio"]
    vm.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  config.vm.network :forwarded_port, guest: 4000, host: 4000
  config.vm.network :forwarded_port, guest: 5432, host: 55432

  config.vm.synced_folder "app", "/home/vagrant/app", create: true

  config.vm.provision :chef_solo do |chef|
    chef.custom_config_path = "Vagrantfile.chef"
    chef.cookbooks_path = ["cookbooks"]
    chef.add_recipe "apt"
    chef.add_recipe "build-essential"
    chef.add_recipe "postgresql::client"
    chef.add_recipe "postgresql::server"

    chef.json.merge!({
      postgresql: {
        version: "9.4",
        config: {
          listen_addresses: "*",
          port: "5432"
        },
        pg_hba: [
          {
            type: "local",
            db: "postgres",
            user: "postgres",
            addr: nil,
            method: "trust"
          },
          {
            type: "host",
            db: "all",
            user: "all",
            addr: "0.0.0.0/0",
            method: "md5"
          },
          {
            type: "host",
            db: "all",
            user: "all",
            addr: "::1/0",
            method: "md5"
          }
        ],
        password: {
          postgres: "postgres"
        }
      }
    })
  end
  config.vm.provision "shell", inline: <<-SHELL
    sudo -u postgres createuser -s vagrant
  SHELL
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get install inotify-tools
    cd /tmp
    wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
    wget http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
    sudo apt-key add erlang_solutions.asc
    sudo apt-get update
    sudo apt-get -y install esl-erlang
    sudo apt-get -y install elixir
  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    cd /home/vagrant/app
    mix local.hex
    yes | mix archive.install https://github.com/phoenixframework/archives/raw/master/phoenix_new.ez
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash
    echo "source /home/vagrant/.nvm/nvm.sh" >> /home/vagrant/.profile
    source /home/vagrant/.profile
    nvm install 5.0
    nvm use 5.0
    nvm alias default 5.0
    npm install -g babel-preset-react --save
  SHELL
end